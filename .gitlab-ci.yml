# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

default:
  image: node:14

stages: # List of stages for jobs, and their order of execution
  - test
  - cache

.yarn_cache_template: &yarn_cache_template
  key:
    files:
      - package.json
      - yarn.lock
  paths:
    - .cache_exists
    - .yarn-cache/
    - node_modules/
    - '**/node_modules/'
  policy: pull

.base_scripts: &base_scripts
  - yarn lint
  - yarn build:crypto
  - yarn build:types
  - yarn graph:setup mumbai staging
  - yarn build:graph
  - HARDHAT_NO_MNEMONIC=yes yarn run build:contracts
  - yarn test
  - yarn run build:dapp:staging

.preview_script: &preview_script
  - |
    apt-get update
    apt-get -y install jq
    if [ -n "$CI_MERGE_REQUEST_IID" ]; then
      threadsBodies=$(
          curl \
              --request GET \
              --header "PRIVATE-TOKEN: $GITLAB_ACCESS_TOKEN" \
              "https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/merge_requests/$CI_MERGE_REQUEST_IID/discussions" \
              | jq -r '.[].notes[].body' )

      if [[ "$threadsBodies" != *"${AMPLIFY_APP_ID}"* ]]; then
        echo "Didn't find existing comment in MR about Amplify preview"

        thread_id=$(
          curl \
              --data-urlencode "body=## After build, preview will ðŸš€[be here!](https://pr-${CI_MERGE_REQUEST_IID}.${AMPLIFY_APP_ID}.amplifyapp.com/)" \
              --request POST \
              --header "PRIVATE-TOKEN: $GITLAB_ACCESS_TOKEN" \
              "https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/merge_requests/$CI_MERGE_REQUEST_IID/discussions" \
          | jq -r .id
        )

        echo "Posted Amplify preview link comment with thread id $thread_id"

        curl -v -X PUT \
          --header "PRIVATE-TOKEN: $GITLAB_ACCESS_TOKEN" \
          "https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/merge_requests/$CI_MERGE_REQUEST_IID/discussions/$thread_id?resolved=true" \
        | jq .

        echo "Marked Amplify preview link comment as resolved"
      else
        echo "Amplify preview comment already exists in this MR"
      fi
    fi

.combined_job_template:
  stage: test
  cache:
    <<: *yarn_cache_template
  before_script:
    - yarn install --cache-folder .yarn-cache

# This job is executed on merge requests and any `push`` where commit title does not start with `Merge`
combined-job-MRs:
  extends: .combined_job_template
  rules:
    - if: $CI_COMMIT_TITLE !~ /^Merge branch/ && $CI_PIPELINE_SOURCE == "merge_request_event"
      when: always
  script:
    - *base_scripts
    - *preview_script

# This job is executed on a `push` where commit title starts with `Merge branch`
combined-job-integration:
  stage: test
  extends: .combined_job_template
  rules:
    - if: $CI_COMMIT_TITLE =~ /^Merge branch/
      when: always
  script:
    - *base_scripts

build-cache:
  stage: cache
  cache:
    <<: *yarn_cache_template
    policy: pull-push
  script:
    - |
      [[ -f .cache_exists ]] && echo "cache already exists" && exit 111
    - echo > .cache_exists
  allow_failure:
    exit_codes: 111 # disable push cache
